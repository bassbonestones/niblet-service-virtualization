DROP TABLE IF EXISTS MOCK_API_REQUEST_RESPONSE;

CREATE TABLE MOCK_API_REQUEST_RESPONSE (
	ID BIGINT NOT NULL,
	API_PATH VARCHAR(256) NOT NULL,
    REQUEST_VERB VARCHAR(10) NOT NULL,
    REQUEST_HEADERS VARCHAR(512) NULL,
    REQUEST_QUERY_PARAMETERS VARCHAR(256) NOT NULL,
    RESPONSE_BODY TEXT NULL,
    RESPONSE_STATUS SMALLINT NOT NULL,
    PRIMARY KEY(ID)
);

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(1, '^consumer$', 'GET', '.*', '.*', null, '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(2, '^consumer$', 'GET', '^(a|[^a])*\<project-name=BLCRM\>(a|[^a])*$', '.*', 'exactMatchHeader', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(3, '^consumer$', 'GET', '^(a|[^a])*\<project-name=[a-zA-Z0-9_]+\>(a|[^a])*$', '.*', 'alphaNumHeader', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(4, '^consumer$', 'GET', '^(a|[^a])*\<project-name=.+\>(a|[^a])*$', '.*', 'wildcardHeader', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(5, '^consumer$', 'GET', '^(a|[^a])*\<project-name=\d+\>(a|[^a])*$', '.*', 'digitsHeader', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(6, '^consumer$', 'GET', '^(a|[^a])*\<project-name=\d{3}-\d{2}-\d{4}\>(a|[^a])*$', '.*', 'customSSNHeader', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(7, '^consumer///(?<id>[^/]+)$', 'GET', '.*', '.*', 'wildCardAtEnd', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(8, '^consumer///(?<id>[^/]+)///fetch$', 'GET', '.*', '.*', 'wildCardInMiddle', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(9, '^consumer$', 'GET', '^(a|[^a])*\<project-name=[a-zA-Z]{5}\>(a|[^a])*$', '.*', 'custom5AlphabetCharsHeader', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(10, '^consumer$', 'GET', '.*', '^(a|[^a])*\<page=3\>(a|[^a])*$', 'exactQueryParam', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(11, '^consumer$', 'GET', '.*', '^(a|[^a])*\<page=\d+\>(a|[^a])*$', 'digitsQueryParam', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(12, '^consumer$', 'GET', '.*', '^(a|[^a])*\<page=[a-zA-Z0-9_]+\>(a|[^a])*$', 'alphaNumericQueryParam', '200');

INSERT INTO MOCK_API_REQUEST_RESPONSE
(ID, API_PATH, REQUEST_VERB, REQUEST_HEADERS, REQUEST_QUERY_PARAMETERS, RESPONSE_BODY, RESPONSE_STATUS)
VALUES
(13, '^consumer$', 'GET', '.*', '^(a|[^a])*\<page=[abc]{5}\>(a|[^a])*$', 'customRegexQueryParam', '200');
